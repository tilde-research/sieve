{"1": "import re\n\ndef extract_emails(text: str) -> tuple:\n    emails = re.findall(r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}', text)\n    return text, emails\n\n", "2": "\n\nimport re\n\ndef highlight_longest_word(text: str) -> str:\n    # Match and highlight the longest word\n    longest_word = max(re.findall(r'\\b\\w+\\b', text), key=len, default=\"\")\n    if longest_word:\n        text = re.sub(rf'\\b{longest_word}\\b', f'<highlight>{longest_word}</highlight>', text)\n    return text\n\n\n", "3": "\n\nimport re\n\ndef extract_hashtags(text: str) -> tuple:\n    # Extract all hashtags in the format #example or #Example123\n    hashtags = re.findall(r'#\\w+', text)\n    return text, hashtags\n\n", "4": "\n\nimport re\n\ndef redact_phone_numbers(text: str) -> tuple:\n    # Find all phone numbers in common formats and replace them with [REDACTED]\n    text = re.sub(r'\\b(\\+?\\d{1,2}[-.\\s]?)?(\\(?\\d{3}\\)?[-.\\s]?)\\d{3}[-.\\s]?\\d{4}\\b', '[REDACTED]', text)\n    return text\n\n", "5": "\n\nimport re\n\ndef anonymize_person_names(text: str) -> tuple:\n    # Replace names in \"Firstname Lastname\" format with initials only, e.g., \"John Doe\" -> \"J. D.\"\n    text = re.sub(r'\\b([A-Z][a-z]+) ([A-Z][a-z]+)\\b', lambda m: f'{m.group(1)[0]}. {m.group(2)[0]}.', text)\n    return text\n\n", "6": "\n\nimport re\n\ndef find_serial_numbers(text: str) -> tuple:\n    # Identify serial numbers in the format \"SN-XXXX-YYYY-ZZZZ\" where X, Y, and Z are alphanumeric\n    serials = re.findall(r'\\bSN-[A-Z0-9]{4}-[A-Z0-9]{4}-[A-Z0-9]{4}\\b', text)\n    return text, serials\n\n", "7": "\n\nimport re\n\ndef obfuscate_credit_cards(text: str) -> tuple:\n    # Find and obfuscate credit card numbers, e.g., \"4111-1111-1111-1111\" becomes \"****-****-****-1111\"\n    text = re.sub(r'\\b(?:\\d{4}[-\\s]?){3}\\d{4}\\b', lambda m: '****-****-****-' + m.group(0)[-4:], text)\n    return text\n"}